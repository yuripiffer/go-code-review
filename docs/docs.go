// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/coupon": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new coupon with the specified code, discount, and minimum basket value",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "coupons"
                ],
                "summary": "Create a new coupon",
                "parameters": [
                    {
                        "description": "Coupon details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_api.CreateCouponRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pkg.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/pkg.Error"
                        }
                    }
                }
            }
        },
        "/coupon/validation": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Applies a coupon code to a given basket value and returns the result or error",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coupons"
                ],
                "summary": "Apply a coupon to a basket",
                "parameters": [
                    {
                        "description": "Coupon code and basket value",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_api.ApplyCouponRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ApplyCouponResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pkg.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/pkg.Error"
                        }
                    }
                }
            }
        },
        "/coupons": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves coupon details for the provided list of coupons if they are all existent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coupons"
                ],
                "summary": "Get coupons by codes",
                "parameters": [
                    {
                        "description": "List of coupon codes",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_api.GetCouponsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/internal_api.CouponResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pkg.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/pkg.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "internal_api.ApplyCouponRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "internal_api.ApplyCouponResponse": {
            "type": "object",
            "properties": {
                "application_successful": {
                    "type": "boolean"
                },
                "applied_discount": {
                    "type": "integer"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "internal_api.CouponResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "discount": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "minimum_basket_value": {
                    "type": "integer"
                }
            }
        },
        "internal_api.CreateCouponRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "discount": {
                    "type": "integer"
                },
                "minimum_basket_value": {
                    "type": "integer"
                }
            }
        },
        "internal_api.GetCouponsRequest": {
            "type": "object",
            "properties": {
                "codes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "pkg.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Machine-readable error code.",
                    "type": "string"
                },
                "error": {
                    "description": "Optional wrapped error."
                },
                "message": {
                    "description": "Human-readable error message.",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/",
	Schemes:          []string{"http"},
	Title:            "Coupon Service API",
	Description:      "This is an API for managing coupons.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
